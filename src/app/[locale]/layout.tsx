import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "../globals.css";
import "bootstrap-icons/font/bootstrap-icons.css";
import { Providers } from "@/lib/providers/providers";
import AuthLoader from "@/components/AuthLoader";
import HeaderWrapper from "@/components/HeaderWrapper";
import GlobalLoadingOverlay from "@/components/GlobalLoadingOverlay";
import NavigationEvents from "@/lib/providers/NavigationEvents";
import { ReactNode } from "react";
import TranslationsProvider from "@/lib/i18n/TranslationsProvider";
import { createInstance } from "i18next";
import { initReactI18next } from "react-i18next";
import resourcesToBackend from "i18next-resources-to-backend";
import { I18nextProvider } from "react-i18next";
import { dir } from "i18next";
import i18nConfig from "@/lib/i18n/settings";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export function generateStaticParams() {
  return i18nConfig.locales.map((locale) => ({ locale }));
}

export default async function LocaleLayout({
  children,
  params,
}: {
  children: React.ReactNode;
  params: { locale: string };
}) {
  const locale = params.locale;

  return (
    <html lang={locale} dir={dir(locale)}>
      <head>
        <script src="https://js.tosspayments.com/v2/standard"></script>
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <Providers>
          <AuthLoader />
          <HeaderWrapper />
          <GlobalLoadingOverlay />
          <NavigationEvents />
          <TranslationsProvider>{children}</TranslationsProvider>
        </Providers>
      </body>
    </html>
  );
}
