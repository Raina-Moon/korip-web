
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "../globals.css";
import "bootstrap-icons/font/bootstrap-icons.css";
import { dir } from "i18next";
import i18nConfig from "@/lib/i18n/settings";
import ClientApp from "@/components/ClientApp";
import Script from "next/script";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export function generateStaticParams() {
  return i18nConfig.locales.map((locale) => ({ locale }));
}

interface LocaleLayoutProps {
  children: React.ReactNode;
  params: {
    locale: string;
  };
}

export default function LocaleLayout({
  children,
  params,
}: LocaleLayoutProps) {
  const locale = params.locale;
  const htmlDir = dir(locale ?? "en");

  return (
    <html lang={locale} dir={htmlDir}>
      <head></head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Script
          src="https://js.tosspayments.com/v2/standard"
          strategy="afterInteractive"
        />
        <ClientApp>{children}</ClientApp>
      </body>
    </html>
  );
}
